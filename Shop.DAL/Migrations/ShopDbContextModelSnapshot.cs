// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shop.DAL.Context;

#nullable disable

namespace Shop.DAL.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shop.DAL.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenderName = "Male"
                        },
                        new
                        {
                            Id = 2,
                            GenderName = "Female"
                        },
                        new
                        {
                            Id = 3,
                            GenderName = "Unknown"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.Goods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CoreCount")
                        .HasColumnType("integer");

                    b.Property<double>("Diagonal")
                        .HasColumnType("double precision");

                    b.Property<int>("GoodsStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("GoodsTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Manufactured")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("RAMSize")
                        .HasColumnType("integer");

                    b.Property<int>("ROMSize")
                        .HasColumnType("integer");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GoodsStatusId");

                    b.HasIndex("GoodsTypeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("Shop.DAL.Entities.GoodsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GoodsStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "In store"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "In stock"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Not avaible"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.GoodsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GoodsTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Desktop"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Tablet"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GoodsId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shop.DAL.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("OrderStatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderStatusName = "In Progress"
                        },
                        new
                        {
                            Id = 2,
                            OrderStatusName = "Finished"
                        },
                        new
                        {
                            Id = 3,
                            OrderStatusName = "Canceled"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Moderator"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Client"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PostalCode")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Shop.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GenderId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.ua",
                            GenderId = 3,
                            Name = "Admin",
                            PasswordHash = new byte[] { 203, 113, 112, 228, 70, 230, 11, 84, 37, 93, 63, 56, 149, 87, 218, 62, 127, 95, 205, 195, 249, 141, 36, 64, 143, 58, 183, 26, 35, 44, 227, 107, 196, 34, 129, 15, 235, 253, 202, 137, 98, 65, 237, 10, 132, 182, 237, 220, 130, 151, 38, 73, 132, 222, 168, 238, 148, 167, 128, 65, 52, 227, 184, 159 },
                            PasswordSalt = new byte[] { 45, 222, 14, 232, 193, 99, 8, 189, 12, 30, 45, 199, 47, 191, 232, 11, 247, 107, 113, 110, 215, 230, 191, 230, 127, 81, 134, 97, 122, 18, 210, 5, 42, 92, 26, 82, 155, 109, 228, 224, 3, 160, 213, 142, 221, 218, 21, 173, 111, 70, 56, 49, 199, 73, 168, 69, 152, 234, 196, 59, 5, 199, 2, 108, 227, 204, 69, 23, 39, 201, 36, 176, 219, 252, 105, 39, 241, 17, 114, 175, 195, 34, 169, 255, 99, 40, 67, 179, 144, 212, 94, 108, 184, 76, 185, 92, 38, 54, 79, 67, 254, 90, 244, 23, 75, 209, 90, 14, 168, 34, 49, 152, 11, 28, 66, 54, 110, 206, 197, 193, 84, 41, 160, 129, 143, 232, 150, 138 },
                            Phone = "0951234567",
                            RoleId = 1,
                            Surname = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "moderator@mail.ua",
                            GenderId = 3,
                            Name = "Moderator",
                            PasswordHash = new byte[] { 203, 113, 112, 228, 70, 230, 11, 84, 37, 93, 63, 56, 149, 87, 218, 62, 127, 95, 205, 195, 249, 141, 36, 64, 143, 58, 183, 26, 35, 44, 227, 107, 196, 34, 129, 15, 235, 253, 202, 137, 98, 65, 237, 10, 132, 182, 237, 220, 130, 151, 38, 73, 132, 222, 168, 238, 148, 167, 128, 65, 52, 227, 184, 159 },
                            PasswordSalt = new byte[] { 45, 222, 14, 232, 193, 99, 8, 189, 12, 30, 45, 199, 47, 191, 232, 11, 247, 107, 113, 110, 215, 230, 191, 230, 127, 81, 134, 97, 122, 18, 210, 5, 42, 92, 26, 82, 155, 109, 228, 224, 3, 160, 213, 142, 221, 218, 21, 173, 111, 70, 56, 49, 199, 73, 168, 69, 152, 234, 196, 59, 5, 199, 2, 108, 227, 204, 69, 23, 39, 201, 36, 176, 219, 252, 105, 39, 241, 17, 114, 175, 195, 34, 169, 255, 99, 40, 67, 179, 144, 212, 94, 108, 184, 76, 185, 92, 38, 54, 79, 67, 254, 90, 244, 23, 75, 209, 90, 14, 168, 34, 49, 152, 11, 28, 66, 54, 110, 206, 197, 193, 84, 41, 160, 129, 143, 232, 150, 138 },
                            Phone = "0501234567",
                            RoleId = 2,
                            Surname = "Moderator"
                        },
                        new
                        {
                            Id = 3,
                            Email = "client@mail.ua",
                            GenderId = 3,
                            Name = "Client",
                            PasswordHash = new byte[] { 203, 113, 112, 228, 70, 230, 11, 84, 37, 93, 63, 56, 149, 87, 218, 62, 127, 95, 205, 195, 249, 141, 36, 64, 143, 58, 183, 26, 35, 44, 227, 107, 196, 34, 129, 15, 235, 253, 202, 137, 98, 65, 237, 10, 132, 182, 237, 220, 130, 151, 38, 73, 132, 222, 168, 238, 148, 167, 128, 65, 52, 227, 184, 159 },
                            PasswordSalt = new byte[] { 45, 222, 14, 232, 193, 99, 8, 189, 12, 30, 45, 199, 47, 191, 232, 11, 247, 107, 113, 110, 215, 230, 191, 230, 127, 81, 134, 97, 122, 18, 210, 5, 42, 92, 26, 82, 155, 109, 228, 224, 3, 160, 213, 142, 221, 218, 21, 173, 111, 70, 56, 49, 199, 73, 168, 69, 152, 234, 196, 59, 5, 199, 2, 108, 227, 204, 69, 23, 39, 201, 36, 176, 219, 252, 105, 39, 241, 17, 114, 175, 195, 34, 169, 255, 99, 40, 67, 179, 144, 212, 94, 108, 184, 76, 185, 92, 38, 54, 79, 67, 254, 90, 244, 23, 75, 209, 90, 14, 168, 34, 49, 152, 11, 28, 66, 54, 110, 206, 197, 193, 84, 41, 160, 129, 143, 232, 150, 138 },
                            Phone = "0671234567",
                            RoleId = 3,
                            Surname = "Client"
                        });
                });

            modelBuilder.Entity("Shop.DAL.Entities.Goods", b =>
                {
                    b.HasOne("Shop.DAL.Entities.GoodsStatus", "GoodsStatus")
                        .WithMany("Goods")
                        .HasForeignKey("GoodsStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.DAL.Entities.GoodsType", "GoodsType")
                        .WithMany("Goods")
                        .HasForeignKey("GoodsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.DAL.Entities.Supplier", "Supplier")
                        .WithMany("Goods")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoodsStatus");

                    b.Navigation("GoodsType");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Shop.DAL.Entities.Order", b =>
                {
                    b.HasOne("Shop.DAL.Entities.Goods", "Goods")
                        .WithMany("Orders")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.DAL.Entities.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.DAL.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Shop.DAL.Entities.User", b =>
                {
                    b.HasOne("Shop.DAL.Entities.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.DAL.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Shop.DAL.Entities.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Shop.DAL.Entities.Goods", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Shop.DAL.Entities.GoodsStatus", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("Shop.DAL.Entities.GoodsType", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("Shop.DAL.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Shop.DAL.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Shop.DAL.Entities.Supplier", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("Shop.DAL.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
